{
	"info": {
		"_postman_id": "57d638ca-22c8-4b46-a1a3-3a18e486a107",
		"name": "ReqRes",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Testing  List User API\r",
							"// Testing Statu\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Testing Response Time \r",
							"pm.test(\"Response time is less than 3 Seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"//Testing Data (Group of test cases)\r",
							"pm.test(\"All Data Correct\", function () \r",
							"{\r",
							"    // Store Actual Result in varible \"jsonData\"\r",
							"    var jsonData = pm.response.json();  \r",
							"    // Assertion of Actual and Expected Value\r",
							"    //pm.expect(jsonData.KEY).to.eql(EXPECTED_VALUE); =>Check AR with ER\r",
							"    pm.expect(jsonData.page).to.eql(2);         \r",
							"    pm.expect(jsonData.per_page).to.eql(6);     \r",
							"    pm.expect(jsonData.total).to.eql(12);       \r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"    // Support\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"    pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"    /************ Test Data  ********************/\r",
							"    /* Array Of Expected Data */\r",
							"    const Id = [7,8];\r",
							"    const Email = [\"michael.lawson@reqres.in\",\"lindsay.ferguson@reqres.in\"];\r",
							"    const firstName = [\"Michael\",\"Lindsay\", ];\r",
							"    const lastName = [\"Lawson\", \"Ferguson\",];\r",
							"    const Avatar = [\"https://reqres.in/img/faces/7-image.jpg\",\"https://reqres.in/img/faces/8-image.jpg\"];\r",
							"    \r",
							"    for (var Counter = 0;Counter<2 ;Counter++)\r",
							"    {\r",
							"        pm.expect(jsonData.data[Counter].id).to.eql(Id[Counter]); \r",
							"        pm.expect(jsonData.data[Counter].email).to.eql(Email[[Counter]]); \r",
							"        pm.expect(jsonData.data[Counter].first_name).to.eql(firstName[Counter]); \r",
							"        pm.expect(jsonData.data[Counter].last_name).to.eql(lastName[Counter]); \r",
							"        pm.expect(jsonData.data[Counter].avatar).to.eql(Avatar[Counter]); \r",
							"    }\r",
							"    \r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "0bf2d46b-91b6-4a03-94f5-47f5740350ea",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}/api/users?page=2",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is less than 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"// Test Data Field\r",
							"pm.test(\"All Data Is Correct\", function () \r",
							"{\r",
							"    // Store Actual Result in varible \"jsonData\"\r",
							"    var jsonData = pm.response.json();\r",
							"    // Assertion of Actual and Expected Value\r",
							"    //data->id\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    //data->email\r",
							"    pm.expect(jsonData.data.email).to.eql(\"janet.weaver@reqres.in\");\r",
							"     //data->first_name\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Janet\");\r",
							"    //data->last_name\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Weaver\");\r",
							"    //data->avatar\r",
							"    pm.expect(jsonData.data.avatar).to.eql(\"https://reqres.in/img/faces/2-image.jpg\");\r",
							"\r",
							"    //support->url\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"    //support->text\r",
							"    pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\"); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "41b6d9df-9126-4e30-a5aa-7452daef8f36",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/users/2"
			},
			"response": []
		},
		{
			"name": "Single User Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"//Single User Not Found\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 404\", function () \r",
							"{\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is less than 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f4b41ae4-b1d4-461b-bad2-772c9780cfcd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/users/23"
			},
			"response": []
		},
		{
			"name": "List Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// List Resource\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is less than 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"/*------------------------------------------------------------------ */\r",
							"// Test Data Field\r",
							"pm.test(\"All Data Is Correct\", function () \r",
							"{\r",
							"    // Store Actual Result in varible \"jsonData\"\r",
							"    var jsonData = pm.response.json();\r",
							"    // Assertion of Actual and Expected Value\r",
							"    //page\r",
							"    pm.expect(jsonData.page).to.eql(1);\r",
							"    //per_page\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"     //total\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    //total_pages\r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"    //data[Counter]->id, name, year, color, pantone_value \r",
							"    //Expected Result\r",
							"    const data_id=[1,2,3,4,5,6];\r",
							"    const data_name=[\"cerulean\",\"fuchsia rose\",\"true red\",\"aqua sky\",\"tigerlily\",\"blue turquoise\"];\r",
							"    const data_year=[2000,2001,2002,2003,2004,2005];\r",
							"    const data_color=[\"#98B2D1\",\"#C74375\",\"#BF1932\",\"#7BC4C4\",\"#E2583E\",\"#53B0AE\"];\r",
							"    const data_pantone_value=[\"15-4020\",\"17-2031\",\"19-1664\",\"14-4811\",\"17-1456\",\"15-5217\"];\r",
							"    // Actual Result Vs Expected Result\r",
							"    for(var Counter = 0; Counter<6;Counter++)\r",
							"    {\r",
							"        pm.expect(jsonData.data[Counter].id).to.eql(data_id[Counter]);\r",
							"        pm.expect(jsonData.data[Counter].name).to.eql(data_name[Counter]);\r",
							"        pm.expect(jsonData.data[Counter].year).to.eql(data_year[Counter]);\r",
							"        pm.expect(jsonData.data[Counter].color).to.eql(data_color[Counter]);\r",
							"        pm.expect(jsonData.data[Counter].pantone_value).to.eql(data_pantone_value[Counter]);\r",
							"    }\r",
							"/*------------------------------------------------------------------ */\r",
							"    // Assertion of Actual and Expected Value\r",
							"    //support->url\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"    //support->text\r",
							"    pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "77836787-e26f-47f8-b20d-d5ad741ac545",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/unknown"
			},
			"response": []
		},
		{
			"name": "Single Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is less than 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"// Test Data Field\r",
							"pm.test(\"All Data Is Correct\", function () \r",
							"{\r",
							"    // Store Actual Result in varible \"jsonData\"\r",
							"    var jsonData = pm.response.json();\r",
							"    // Assertion of Actual and Expected Value\r",
							"    //data->id\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    //data->name\r",
							"    pm.expect(jsonData.data.name).to.eql(\"fuchsia rose\");\r",
							"     //data->year\r",
							"    pm.expect(jsonData.data.year).to.eql(2001);\r",
							"    //data->color\r",
							"    pm.expect(jsonData.data.color).to.eql(\"#C74375\");\r",
							"    //data->avatar\r",
							"    pm.expect(jsonData.data.pantone_value).to.eql(\"17-2031\");\r",
							"\r",
							"    //support->url\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"    //support->text\r",
							"    pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\"); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c9cfa675-df19-4df6-98a2-0fde024f3359",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/unknown/2"
			},
			"response": []
		},
		{
			"name": "Single Resource Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 404\", function () \r",
							"{\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is less than 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ac0be6ba-8997-432b-8f3b-2d6124773f72",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/unknown/23"
			},
			"response": []
		},
		{
			"name": "Delayed Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is above 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.above(3000);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "821204f2-3f51-4413-b742-5707f38896a8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}/api/users?delay=3",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Creat",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 201\", function () \r",
							"{\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Creat User\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"leader\");\r",
							"});\r",
							"/*After Creat You Should Test By GET -> as Single user */\r",
							"/* You Should Try Test Creat User Without Send Required Data In Body Field -In Real Project-\r",
							"   Expected \"Error Message\" */"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "db7f759c-298e-4d69-802b-f8d06ed747e5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/users"
			},
			"response": []
		},
		{
			"name": "Register Successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"/* You Should Try Register User Without Send Required Data In Body Field -In Real Project- \r",
							"   Expected \"Error Message\" */\r",
							"/*After Register You Should Test By GET -> as Single user -In Real Project- */\r",
							"/*After Register You Should Test By POST Same User -In Real Project - \r",
							"  Expected \"the user already regitered or existed try other inputs\" */\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c023cc53-1886-4cee-ab1b-fd7346c8f81b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/register"
			},
			"response": []
		},
		{
			"name": "Register Unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 400 Bad Request\", function () \r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Login Unsuccessful Missing Password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "34d90b95-101f-4e2c-9b86-e9b8a93f55be",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/register"
			},
			"response": []
		},
		{
			"name": "Login Successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"/* You Should Try login User Without Send Required Data In Body Field -In Real Project- \r",
							"   Expected \"Error Message\" */\r",
							"/* Ask Developer Expiry Date of Token To Test Token value or use it in other thing to check */\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "bf40ede7-473d-406f-87e2-63a4b7e78447",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/login"
			},
			"response": []
		},
		{
			"name": "Login Unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 400\", function () \r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Register Unsuccessful Missing Password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});\r",
							"/* You Should Try login User Without Send Required Data In Body Field -In Real Project- \r",
							"   Expected \"Error Message\" */\r",
							"/* Ask Developer Expiry Date of Token To Test Token value or use it in other thing to check */\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "aa2db34c-b1bc-46d8-94f5-755285f58d71",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/login"
			},
			"response": []
		},
		{
			"name": "Update User Data-PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"update user data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2b1445de-3f41-40d5-ad82-bef8ef069d6c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/users/2"
			},
			"response": []
		},
		{
			"name": "Update User Data -PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 200\", function () \r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"update user data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"zion resident\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3b7217d0-6b4c-4b1a-9575-6689d037a1fc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/users/2"
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07de4687-8177-4849-8275-358dab635822",
						"exec": [
							"// Single User\r",
							"\r",
							"// Test Status Code\r",
							"pm.test(\"Status code is 204\", function () \r",
							"{\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"//Test Response Time\r",
							"pm.test(\"Response time is below 3 Seconds\", function () \r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"/* After Delete You Should Test By GET -> as Single user and  -In Real Project-\r",
							"   Expected status 404 Not Found*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8799297f-eac9-4fee-b226-e8fc0a28ff91",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{Base_URL}}/api/users/2"
			},
			"response": []
		}
	]
}